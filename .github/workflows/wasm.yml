name: WASM

permissions:
  contents: write

on:
  push:
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'extras/images/**'

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Ubuntu Latest GCC",
            os: ubuntu-latest,
            artifact: "ubuntu_gcc.7z",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            generators: "Ninja",
          }

    steps:
      - uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Python Requirements
        run: |
          python3 -m venv .venv
          if [ "$RUNNER_OS" == "Windows" ]; then
            .venv\Scripts\activate
            python -m pip install -r requirements.txt
            echo "$PWD\.venv\Scripts" >> $GITHUB_PATH
          else
            source .venv/bin/activate
            python3 -m pip install -r requirements.txt
            echo "$PWD/.venv/bin" >> $GITHUB_PATH
          fi

      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: "3.30.0"

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master
        with:
          version: "1.10.0"

      - name: Install EMSDK
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: "4.0.14"

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          architecture: 'x64'

      - name: Verify
        run: |
          python3 --version
          cmake --version
          ninja --version
          node --version
          npm --version
          emcc -v

      - name: Conan
        run: python3 xplpc.py conan-setup

      - name: Build
        run: python3 xplpc.py wasm-build

      - name: Test
        run: python3 xplpc.py wasm-test

      - name: Build Sample
        run: python3 xplpc.py wasm-build-sample

      - name: Generate Fallback Files
        if: github.ref == 'refs/heads/main'
        working-directory: wasm/sample/dist
        run: |
          cp index.html 200.html
          cp index.html 404.html

      - name: Publish
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.PUBLISH_TOKEN }}
          repository-name: "xplpc/wasm-demo"
          folder: wasm/sample/dist
          single-commit: true
          branch: main
